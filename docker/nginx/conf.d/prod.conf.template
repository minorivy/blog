
upstream php-stream {
	server unix:/sock/docker.sock;
}

server {
	listen 80;
	server_name $server_name;
	return 301 https://$host$request_uri;
}

server {
	listen 443 ssl http2;
	server_name $server_name;

	ssl_certificate /var/lib/https-portal/$server_name/$STAGE_ENV/chained.crt;
	ssl_certificate_key /var/lib/https-portal/$server_name/$STAGE_ENV/domain.key;

	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_session_cache shared:SSL:50m;
	ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
	ssl_prefer_server_ciphers on;

	ssl_dhparam /var/lib/https-portal/dhparam.pem;

	root /var/www/app/web;
	index index.php index.html index.htm;
	server_tokens off;
	client_max_body_size 20m;

	location ~ ^/.+\.(css|js|jpe?g|png|gif|svg|ico|mp3|txt|xml|woff|config|json)(\??.*$) {
		try_files $uri$2 =404;
	}

	# Prevent PHP scripts from being executed inside the uploads folder.
	location ~* /app/uploads/.*.php$ {
		deny all;
	}

	location / {
		try_files $uri $uri/ /index.php?$args;
	}

	location ~ \.php$ {
		fastcgi_pass php-stream;
		fastcgi_split_path_info ^(.+\.php)(/.*)$;
		include fastcgi_params;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_param PATH_INFO $fastcgi_path_info;
		fastcgi_param HTTPS on;
		fastcgi_hide_header X-Powered-By;
	}
}